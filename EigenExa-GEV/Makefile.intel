FF = mpif90
FC = mpif90
CC = mpicc

# Optimization flags for Intel compiler
CCFLAG = -g -O0 -fpp

SCALAPACK = -L$(HOME)/lib64 -lscalapack
BLAS      = -mkl=parallel
LAPACK    =
LIB       = EigenExa
AR        = ar
RANLIB    = ranlib
RM        = rm -f


EIGENPATH = $(HOME)/Eigen/RELEASE/EigenExa-2.2a

# include path for header and module files
INCPATH   = -I$(EIGENPATH) -I$(EIGENPATH)/include -I$(HOME)/lib64
INCFLAG   = $(INCPATH)

# linker path for header and module files
LDPATH    = -L$(EIGENPATH) -L$(EIGENPATH)/include -L$(HOME)/lib64
LDFLAG    = $(LDPATH) $(CCFLAG) -l$(LIB) $(SCALAPACK) $(BLAS)

OBJS = KMATH_EIGEN_GEV_main.o \
       KMATH_EIGEN_GEV.o KMATH_EIGEN_GEV_check.o mat_set.o

all : a.out

a.out : $(OBJS)
	$(FF) -o a.out $(CCFLAG) $(OBJS) $(LDFLAG)

KMATH_EIGEN_GEV_main.o : KMATH_EIGEN_GEV_main.F
	$(FF) -c KMATH_EIGEN_GEV_main.F $(CCFLAG) $(INCFLAG)
KMATH_EIGEN_GEV.o : KMATH_EIGEN_GEV.F KMATH_EIGEN_GEV_1.F KMATH_EIGEN_GEV_2.F
	$(FF) -c KMATH_EIGEN_GEV.F $(CCFLAG) $(INCFLAG)
KMATH_EIGEN_GEV_check.o : KMATH_EIGEN_GEV_check.F
	$(FF) -c KMATH_EIGEN_GEV_check.F $(CCFLAG) $(INCFLAG)
mat_set.o: mat_set.f
	$(FF) -c mat_set.f $(CCFLAG) $(INCFLAG)

#mat_set.o:
#	@-if [ -e mat_set.f ]; then \
#		\rm mat_set.f; \
#	fi
#	@ln -s $(EIGENPATH)/mat_set.f .
#	$(FF) -c mat_set.f $(CCFLAG) $(INCFLAG)

clean :
	-\rm -f *.o a.out mat_set.f
